{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/pqscheduler.app.js","webpack:///./src/scheduler/scheduler.component/scheduler.component.html","webpack:///./src/scheduler/scheduler.component/scheduler.component.js","webpack:///./src/scheduler/scheduler.component/scheduler.component.scss","webpack:///./src/scheduler/scheduler.customize/schedulercustomize.component.html","webpack:///./src/scheduler/scheduler.customize/schedulercustomize.component.js","webpack:///./src/scheduler/scheduler.customize/schedulercustomize.component.scss","webpack:///./src/scheduler/scheduler.customize/stage.js","webpack:///./src/scheduler/scheduler.customize/status.js","webpack:///./src/scheduler/scheduler.directives/draganddrop.js","webpack:///./src/scheduler/scheduler.directives/modal.directive.js","webpack:///./src/scheduler/scheduler.directives/modal.directive.scss","webpack:///./src/scheduler/scheduler.editcolumn/schedulereditcolumn.component.html","webpack:///./src/scheduler/scheduler.editcolumn/schedulereditcolumn.component.js","webpack:///./src/scheduler/scheduler.editcolumn/schedulereditcolumn.component.scss","webpack:///./src/scheduler/scheduler.module.js","webpack:///./src/scheduler/scheduler.services/modal.service.js","webpack:///./src/scheduler/scheduler.services/schedulerData.service.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA0C;AACQ;AACC;AACG;AACW;AACR;AACI;AACG;AACS;AACE;;;;;;;;;;;;;ACT3E,iOAAiO,yFAAyF,gDAAgD,uqB;;;;;;;;;;;;ACA1W;AAAA;AAAA;AAAA,CAAqC;;AAErC;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,mBAAO,CAAC,gGAA4B;AAC1D;AACA,SAAS;;AAET;;AAEA;AACA;AACA,2CAA2C;AAC3C,2CAA2C;AAC3C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET,oCAAoC;;AAEpC;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;;AAEA,kCAAkC,uBAAuB;AACzD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kCAAkC,uCAAuC;AACzE;AACA,uCAAuC,mCAAmC;AAC1E;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kEAAkE;AAClE;AACA,SAAS;;AAET;AACA;;AAEA,gDAAgD,MAAM;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,+CAA+C,8DAA8D;AAC7G;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB,SAAS;AACT;AACA;AACA,I;;;;;;;;;;;AClQA,uC;;;;;;;;;;;ACAA,sTAAsT,gBAAgB,gBAAgB,WAAW,MAAM,aAAa,6UAA6U,yBAAyB,8DAA8D,aAAa,mZAAmZ,gBAAgB,gBAAgB,gBAAgB,MAAM,kBAAkB,8b;;;;;;;;;;;;ACAhwC;AAAA;AAAA;AAAA,CAA8C;;AAE9C;AACA;;AAEA;AACA;AACA;AACA,sBAAsB,mBAAO,CAAC,kHAAqC;AACnE;AACA;AACA;AACA;AACA,SAAS;;AAET;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B,4BAA4B;AACvD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2DAA2D;;AAE3D;;AAEA;;AAEA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,iBAAiB;AACjB;AACA;AACA,qBAAqB;;AAErB;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA,aAAa;;AAEb;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;;AAEb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,I;;;;;;;;;;;AC5KA,uC;;;;;;;;;;;ACAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;;;;;;;;;;;;;AChBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,C;AACA;;;;;;;;;;;;;;AChBA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,6BAA6B;AAC3D,aAAa;AACb;AACA;AACA;AACA,C;;;;;;;;;;;;ACxDA;AAAA;AAAA;AAAA,CAAiC;;AAEjC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,I;;;;;;;;;;;AClED,uC;;;;;;;;;;;ACAA,6f;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA,CAA+C;;AAE/C;AACA;;AAEA;AACA;AACA;AACA,sBAAsB,mBAAO,CAAC,qHAAsC;AACpE;AACA;AACA;AACA;AACA,SAAS;;AAET;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kCAAkC,yBAAyB;AAC3D;AACA;AACA;AACA;AACA;AACA,I;;;;;;;;;;;AChCA,uC;;;;;;;;;;;ACAA;AACA;;AAEA;AACA;AACA,CAAC,I;;;;;;;;;;;ACLD;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wBAAwB;AACxB;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,qDAAqD,SAAS;AAC9D;AACA;;AAEA;AACA;AACA,6CAA6C,SAAS;AACtD;AACA;;AAEA;AACA;AACA,6CAA6C,SAAS;AACtD;AACA;AACA;;AAEA,CAAC;;;;;;;;;;;;ACnDD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA,gBAAgB;AAChB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA,iBAAiB;AACjB,aAAa;;AAEb;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA,iBAAiB;AACjB,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA,CAAC,I","file":"pqscheduler.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/pqscheduler.app.js\");\n","ï»¿import './scheduler/scheduler.module.js';\r\nimport './scheduler/scheduler.customize/stage.js';\r\nimport './scheduler/scheduler.customize/status.js';\r\nimport './scheduler/scheduler.services/modal.service';\r\nimport './scheduler/scheduler.services/schedulerData.service.js';\r\nimport './scheduler/scheduler.directives/draganddrop.js';\r\nimport './scheduler/scheduler.directives/modal.directive.js';\r\nimport './scheduler/scheduler.component/scheduler.component.js';\r\nimport './scheduler/scheduler.customize/schedulercustomize.component.js';\r\nimport './scheduler/scheduler.editcolumn/schedulereditcolumn.component.js';\r\n\r\n","module.exports = \"<div class=\\\"pq-scheduler\\\"> <button ng-click=\\\"$ctrl.openCustomize($event)\\\">Customize</button> <div class=\\\"scheduler-container\\\"> <div id=\\\"scheduler_here\\\" class=\\\"dhx_cal_container\\\" style=\\\"width:100%;height:100vh\\\"> <div class=\\\"dhx_cal_navline\\\"> <div class=\\\"dhx_cal_prev_button\\\">&nbsp;</div> <div class=\\\"dhx_cal_next_button\\\">&nbsp;</div> <div class=\\\"dhx_cal_today_button\\\"></div> <div class=\\\"dhx_cal_date\\\"></div> <div class=\\\"dhx_cal_tab\\\" name=\\\"day_tab\\\"></div> <div class=\\\"dhx_cal_tab\\\" name=\\\"week_tab\\\"></div> <div class=\\\"dhx_cal_tab\\\" name=\\\"month_tab\\\"></div> <div class=\\\"dhx_cal_tab\\\" name=\\\"unit_tab\\\" style=\\\"right:280px\\\"></div> </div> <div class=\\\"dhx_cal_header\\\"></div> <div class=\\\"dhx_cal_data\\\"></div> </div> </div> <pq-modal id=\\\"scheduler-customize-modal\\\"> <div class=\\\"pq-modal\\\"> <div class=\\\"pq-modal-body\\\"> <pq-scheduler-customize on-save-customize=\\\"$ctrl.onSaveCustomize()\\\"></pq-scheduler-customize> </div> </div> <div class=\\\"pq-modal-background\\\"></div> </pq-modal> </div>\";","ï»¿import './scheduler.component.scss';\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('scheduler.module')\r\n        .component('pqScheduler', {\r\n            // templateUrl: './scheduler.component.html',\r\n            template: require('./scheduler.component.html'),\r\n            controller: SchedulerController,\r\n        });\r\n\r\n    SchedulerController.inject = ['$scope', '$window', '$document', '$timeout', 'schedulerDataService', 'modalService'];\r\n\r\n    function SchedulerController($scope, $window, $document, $timeout, schedulerDataService, modalService) {\r\n        let $ctrl = this;\r\n        $scope.scheduler = $ctrl.scheduler; //fix old logic (?)\r\n        $scope.viewModel = $ctrl.viewModel; //fix old logic (?)\r\n        let scheduler = $window.scheduler;\r\n\r\n        let _originalEvent = new Map();\r\n        let customizeData = null;\r\n        let units = null;\r\n\r\n        $ctrl.openCustomize = function ($event) {\r\n            $event.preventDefault();\r\n            $event.stopPropagation();\r\n            modalService.Open('scheduler-customize-modal');\r\n        };\r\n\r\n        $ctrl.openModal = function (id) {\r\n            modalService.Open(id);\r\n        };\r\n\r\n       \r\n\r\n        $ctrl.closeModal = function closeModal(id) {\r\n            modalService.Close(id);\r\n        };\r\n\r\n        $ctrl.handleWrappedError = function(result) {\r\n            if (result.error) {\r\n                if (result.error.message) {\r\n                    alert(result.error.message);\r\n                }\r\n                else {\r\n                    console.log('undefined error');\r\n                }\r\n            }\r\n            else {\r\n                console.log('not wrapped error');\r\n            }\r\n        };\r\n\r\n        $ctrl.handleError = function(result) {\r\n            if (result && result.statusText) {\r\n                console.log(result.statusText);\r\n            }\r\n            else {\r\n                if (result)\r\n                    console.log(result);\r\n                else\r\n                    console.log('error');\r\n            }\r\n        };\r\n\r\n        $ctrl.onSaveCustomize = function onSaveCustomize() {\r\n            $ctrl.LoadUnits(true);\r\n        };\r\n\r\n        $ctrl.rollbackEvent = function (ev) {\r\n            let originalEvent = _originalEvent.get(ev.appointmentId);\r\n            if (!originalEvent)\r\n                return;\r\n            _originalEvent.delete(ev.appointmentId);\r\n\r\n            ev.start_date = originalEvent.start_date;\r\n            ev.end_date = originalEvent.end_date;\r\n            ev.unitid = originalEvent.unitid;\r\n            scheduler.updateView();\r\n\r\n        };\r\n\r\n        $ctrl.rollbackEventTime = function (ev) {\r\n            let originalEvent = _originalEvent.get(ev.appointmentId);\r\n            if (!originalEvent)\r\n                return;\r\n            _originalEvent.delete(ev.appointmentId);\r\n\r\n            ev.start_date = originalEvent.start_date;\r\n            ev.end_date = originalEvent.end_date;\r\n            scheduler.updateView();\r\n\r\n        };\r\n\r\n        // config\r\n        scheduler.config.xml_date = \"%Y-%m-%d %H:%i\";\r\n        scheduler.locale.labels.unit_tab = \"Stage\";\r\n        scheduler.xy.scale_width = 0;//sets the height of the X-Axis\r\n        scheduler.config.dblclick_create = false;\r\n        scheduler.config.drag_create = false;\r\n        scheduler.config.readonly_form = true;\r\n\r\n        var sections = scheduler.serverList(\"units\");\r\n        scheduler.createUnitsView({\r\n            name: \"unit\",\r\n            property: \"unitid\",\r\n            skip_incorrect: true,\r\n            list: sections\r\n        });\r\n\r\n        scheduler.parse([], \"json\");//without it  appears popup says\r\n\r\n        scheduler.init('scheduler_here', new Date(), \"unit\");\r\n\r\n        \r\n        scheduler.attachEvent(\"onBeforeViewChange\", function (old_mode, old_date, mode, date) {\r\n            var a_date = schedulerDataService.getDate(date);\r\n            var a_minDate = schedulerDataService.getDate(scheduler.getState().min_date);\r\n            var a_maxDate = schedulerDataService.getDate(scheduler.getState().max_date);\r\n\r\n            if (a_date < a_minDate)\r\n                a_minDate = a_date;\r\n\r\n            if (a_date > a_maxDate)\r\n                a_maxDate = a_date;\r\n\r\n            schedulerDataService.loadAppointments(a_minDate, a_maxDate)\r\n                .then(function (result) {\r\n                    if (result.error) {\r\n                        $ctrl.handleWrappedError(result);\r\n                        return;\r\n                    }\r\n                    if (result.data) {\r\n                        scheduler.clearAll();\r\n                        scheduler.parse(result.data, \"json\");\r\n                    }\r\n                }, function (result) {\r\n                    $ctrl.handleError(result);\r\n                    return;\r\n                });\r\n            return true;\r\n        });\r\n\r\n        $ctrl.LoadUnits =  function(reloadCustomize) {\r\n            schedulerDataService.loadUnits()\r\n                .then(function (result) {\r\n                    if (result.error) {\r\n                        $ctrl.handleWrappedError(result);\r\n                        return;\r\n                    }\r\n                    if (result.data) {\r\n                        $ctrl.units = result.data;\r\n                        scheduler.updateCollection(\"units\", $ctrl.units);\r\n                        if (reloadCustomize) {\r\n                            $ctrl.LoadCustomizeData();\r\n                            return;\r\n                        }\r\n                    }\r\n                }, function (result) {\r\n                    $ctrl.handleError(result);\r\n                    return;\r\n                });\r\n        };\r\n\r\n        $ctrl.LoadUnits(false);\r\n\r\n        $ctrl.LoadCustomizeData = function() {\r\n            schedulerDataService.getCustomizeData()\r\n                .then(function (result) {\r\n                    if (result.error) {\r\n                        $ctrl.handleWrappedError(result);\r\n                        return;\r\n                    }\r\n                    if (result.data) {\r\n                        $ctrl.customizeData = result.data;\r\n                        $ctrl.RemapEventToUnits();\r\n                    }\r\n                }, function (result) {\r\n                    $ctrl.handleError(result);\r\n                    return;\r\n                });\r\n        };\r\n\r\n        $ctrl.RemapEventToUnits = function () {\r\n            var evs = scheduler.getEvents();\r\n            if (!evs || evs.length == 0)\r\n                return;\r\n\r\n            for (var eventIdx = 0; eventIdx < evs.length; eventIdx++) {\r\n                var ev = evs[eventIdx];\r\n                ev.unitid = $ctrl.getUnitIdForServiceid(ev.serviceId, ev.calendarStageType)\r\n            }\r\n        }\r\n\r\n        $ctrl.getUnitIdForServiceid = function (serviceId, stageTypeId) {\r\n            if (!$ctrl.customizeData)\r\n                return - 1;\r\n            let result = -1;\r\n\r\n            for (var stageIdx = 0; stageIdx < $ctrl.customizeData.length; stageIdx++) {\r\n                var stage = $ctrl.customizeData[stageIdx];\r\n                for (var statusIdx = 0; statusIdx < stage.statuses.length; statusIdx++) {\r\n                    if (status.Id == serviceId) {\r\n                        result = stage.Id;\r\n                        break;\r\n                    }\r\n                };\r\n\r\n                if (result >= 0) {\r\n                    break;\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n\r\n        scheduler.attachEvent(\"onBeforeEventChanged\", function (ev, e, is_new, original) {\r\n            _originalEvent.set(ev.appointmentId, $.extend(true, {}, original));\r\n            return true;\r\n        });\r\n\r\n        scheduler.attachEvent(\"onEventChanged\", function (id, ev) {\r\n            let linkToEvent = ev;\r\n\r\n            let theEventCopy = $.extend(true, {}, ev); // make a copy.\r\n            let timeZoneOffsetMs = ev.start_date.getTimezoneOffset() * 60000;\r\n            theEventCopy.start_date = new Date(ev.start_date.getTime() - timeZoneOffsetMs);\r\n            theEventCopy.end_date = new Date(ev.end_date.getTime() - timeZoneOffsetMs);\r\n            let originalEvent = _originalEvent.get(ev.appointmentId);\r\n            let previousUnitId = 0;\r\n            if (originalEvent) {\r\n                previousUnitId = originalEvent.unitid;\r\n            }\r\n            \r\n\r\n            schedulerDataService.eventChanged({ previousUnitId: previousUnitId, schedulerEvent: theEventCopy})\r\n                .then(function (result) {\r\n                    \r\n                    if (result.error) {\r\n                        $ctrl.handleWrappedError(result);\r\n                        $ctrl.rollbackEvent(ev);\r\n                        return;\r\n                    }\r\n                    if (result.data.appointmentId) {\r\n                        linkToEvent.appointmentId = result.data.appointmentId;\r\n                        linkToEvent.serviceId = result.data.serviceId;\r\n                    }\r\n\r\n                    $ctrl.rollbackEventTime(ev);\r\n                    console.log('saved');\r\n                }, function (result) {\r\n                    $ctrl.handleError(result);\r\n                    $ctrl.rollbackEvent(ev);\r\n                });\r\n        });\r\n    }\r\n}\r\n)();","// extracted by mini-css-extract-plugin","module.exports = \"<div class=\\\"scheduler-customize-container\\\"> <div class=\\\"scheduler-centered-content\\\"> <div class=\\\"avaiable-container\\\" pq-drop-on-me on-drop=\\\"handledrop(event, null, data)\\\"> Available services <div ng-repeat=\\\"status in statuses\\\" class=\\\"status\\\" pq-drag-me=\\\"statusid\\\" id=\\\"status_{{stagestatus.id}}\\\" statusid=\\\"{{status.id}}\\\"> {{status.name}} </div> </div> <div class=\\\"stages-block\\\"> <div class=\\\"centered\\\"> <span> Stages </span> <span> <input type=\\\"submit\\\" class=\\\"flatbutton\\\" value=\\\"+\\\" title=\\\"Add Column\\\" ng-click=\\\"$ctrl.addStage($event)\\\"/> </span> </div> <div class=\\\"stages-container\\\"> <div ng-repeat=\\\"stageobj in stages\\\" class=\\\"stage\\\" pq-drop-on-me=\\\"{{stageobj.stageType == 3}}\\\" on-drop=\\\"handledrop(event, stageobj, data)\\\" id=\\\"stage_{{stageobj.id}}\\\"> <div class=\\\"stageheader\\\"> <span> <input ng-model=\\\"stageobj.name\\\" class=\\\"stageheadername\\\"/> </span> <span ng-if=\\\"stageobj.stageType == 3\\\"> <input type=\\\"submit\\\" class=\\\"flatbutton\\\" value=\\\"-\\\" title=\\\"Remove Column\\\" ng-click=\\\"$ctrl.removeStage($event, stageobj)\\\"/> </span> </div> <div ng-repeat=\\\"stagestatus in stageobj.statuses\\\" class=\\\"status\\\" pq-drag-me=\\\"statusid\\\" id=\\\"status_{{stagestatus.id}}\\\" statusid=\\\"{{stagestatus.id}}\\\"> {{stagestatus.name}} </div> </div> </div> </div> </div> <div class=\\\"pq-modal-footer\\\"> <button type=\\\"button\\\" ng-click=\\\"$ctrl.closeModal(false)\\\" class=\\\"btn btn-default\\\" focus-element=\\\"autofocus\\\" data-dismiss=\\\"pq-modal\\\">Close</button> <button type=\\\"button\\\" ng-click=\\\"$ctrl.closeModal(true)\\\" class=\\\"btn btn-primary\\\">Save changes</button> </div> </div> <pq-scheduler-edit-column on-add-stage=\\\"$ctrl.onAddStage(stagename)\\\"></pq-scheduler-edit-column>\";","ï»¿import './schedulercustomize.component.scss';\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('scheduler.module')\r\n        .component('pqSchedulerCustomize', {\r\n            template: require('./schedulercustomize.component.html'),\r\n            controller: SchedulerCustomizeController,\r\n            bindings: {\r\n                onSaveCustomize: '&'\r\n            }\r\n        });\r\n    \r\n    SchedulerCustomizeController.inject = ['$scope', '$window', '$document', '$timeout','modalService','schedulerDataService', 'Stage', 'Status'];\r\n   \r\n\r\n    function SchedulerCustomizeController($scope, $window, $document, $timeout, modalService, schedulerDataService, Stage, Status) {\r\n        let $ctrl = this;\r\n        let $ctrlAddColumn = $('pq-scheduler-edit-column');\r\n        $ctrlAddColumn.hide();\r\n\r\n        function getLastIndexOfServiceStage() {\r\n            let index = -1;\r\n            for (let i = 0; i < $ctrl.allStages.length; i++) {\r\n                let stage = $ctrl.allStages[i];\r\n                if (stage.stageType == 3) {\r\n                    index = i;\r\n                }\r\n            }\r\n\r\n            return index;\r\n        }\r\n\r\n        $ctrl.removeFromArray = function (array, value) {\r\n            var idx = array.indexOf(value);\r\n            if (idx !== -1) {\r\n                array.splice(idx, 1);\r\n            }\r\n            return array;\r\n        };\r\n\r\n        $ctrl.onAddStage = function onAddStage(stagename) {\r\n            let index = getLastIndexOfServiceStage() + 1;\r\n            let newStage = new Stage(-1, stagename, 3, []); //3- service.\r\n\r\n            $ctrl.allStages.splice(index, 0, newStage);\r\n            \r\n        };\r\n\r\n        $ctrl.closeModal = function closeModal(save) {\r\n            if (save) {\r\n                let data = { stages: $ctrl.allStages, available: $ctrl.availablestatuses};\r\n                schedulerDataService.saveCustomizeData(data)\r\n                .then(function (result) {\r\n                    if (result.error) {\r\n                        schedulerDataService.handleWrappedError(result);\r\n                        return;\r\n                    }\r\n\r\n                    $ctrl.onSaveCustomize();\r\n                    \r\n                }, function (result) {\r\n                    schedulerDataService.handleError(result);\r\n                    return;\r\n                    });\r\n\r\n            };\r\n            \r\n            modalService.Close('scheduler-customize-modal');\r\n        };\r\n\r\n        $ctrl.removeStage = function removeStage($event, stageobj) {\r\n            $event.preventDefault();\r\n            $event.stopPropagation();\r\n\r\n            if (!stageobj) {\r\n                alert('undefined stage');\r\n                return;\r\n            }\r\n\r\n\r\n            stageobj.statuses.forEach(function (status) {\n                $ctrl.availablestatuses.push(status);\n            });\r\n\r\n            $ctrl.removeFromArray($ctrl.allStages, stageobj);\r\n        };\r\n\r\n        $ctrl.addStage = function addStage($event) {\r\n            $event.preventDefault();\r\n            $event.stopPropagation();\r\n            $ctrlAddColumn.show();\r\n        };\r\n\r\n\r\n        let allStages = [];\r\n        let availablestatuses = [];\r\n        let allstatuses = [];\r\n\r\n        schedulerDataService.getCustomizeData()\r\n            .then(function (result) {\r\n                if (result.error) {\r\n                    schedulerDataService.handleWrappedError(result);\r\n                    return;\r\n                }\r\n                if (result.data) {\r\n                    $ctrl.allStages = result.data.stages;\r\n                    $ctrl.availablestatuses = result.data.available;\r\n\r\n                    $scope.stages = $ctrl.allStages;\r\n                    $scope.statuses = $ctrl.availablestatuses;\r\n\r\n                    $scope.$apply();\r\n                }\r\n            }, function (result) {\r\n                schedulerDataService.handleError(result);\r\n                return;\r\n            });\r\n\r\n        $scope.stages = allStages;\r\n        $scope.statuses = availablestatuses;\r\n\r\n        // stateObj - object where drag new status, data - id of status which is drag.\r\n        $scope.handledrop = function (event, stageobj, data) {\r\n            let statusObj;\r\n            let statusId = data;\r\n\r\n            $ctrl.allStages.forEach(function (stage) {\n                stage.statuses.forEach(function (status) {\n                    if (status.id == statusId) {\n                        statusObj = status;\n                    }\n                });\n            });\r\n\r\n            if (!statusObj) {\r\n                $ctrl.availablestatuses.forEach(function (status) {\n                    if (status.id == statusId) {\n                        statusObj = status;\n                    }\n                });\r\n            }\r\n\r\n          \r\n            if (!statusObj) {\r\n                return;\r\n            }\r\n\r\n            let previousStageId = statusObj.stageId;\r\n            if (previousStageId == -1) {\r\n                $ctrl.removeFromArray($ctrl.availablestatuses, statusObj);\r\n            } else {\r\n                let previousStage = $ctrl.allStages.find(item => item.id == previousStageId);\r\n                if (previousStage) {\r\n                    $ctrl.removeFromArray(previousStage.statuses, statusObj);\r\n                }\r\n            }\r\n\r\n            if (stageobj) {\r\n                statusObj.stageId = stageobj.id;\r\n                stageobj.statuses.push(statusObj);\r\n            }else {\r\n                statusObj.stageId = -1;\r\n                $ctrl.availablestatuses.push(statusObj);\r\n            }\r\n\r\n            $scope.$apply();\r\n        }\r\n    }\r\n}\r\n)();","// extracted by mini-css-extract-plugin","ï»¿(function () {\r\n    'use strict';\r\n\r\n    var app = angular.module('scheduler.module');\r\n    app.factory('Stage', function () {\r\n        function Stage(id, name, stageType, statuses) {\r\n            this.id = id;\r\n            this.name = name;\r\n            this.stageType = stageType;\r\n            this.statuses = [];\r\n            if (statuses) {\r\n                this.statuses = statuses;\r\n            }\r\n        }\r\n        return Stage;\r\n    });\r\n})();\r\n\r\n","ï»¿(function () {\r\n    'use strict';\r\n    angular\r\n        .module('scheduler.module')\r\n        .factory('Status', function () {\r\n            function Status(id, name, isQflow) {\r\n                this.id = id;\r\n                this.name = name;\r\n                this.isQflow = isQflow;\r\n                this.stageId = -1;\r\n            };\r\n\r\n            return Status\r\n        }\r\n        );\r\n}     \r\n)();\r\n\r\n\r\n","ï»¿angular\r\n    .module('scheduler.module')\r\n    .directive('pqDragMe', pqDragMe)\r\n    .directive('pqDropOnMe', pqDropOnMe);\r\n\r\npqDragMe.$inject = [];\r\n\r\nfunction pqDragMe() {\r\n    var DDO = {\r\n        restrict: 'A',\r\n        link: function (scope, element, attrs) {\r\n            element.prop('draggable', true);\r\n            element.on('dragstart', function (event) {\r\n                if (event.target.attributes['pq-drag-me']) {\r\n                    let dragmeattribute = event.target.attributes['pq-drag-me'].value;\r\n                    let dataid = event.target.attributes[dragmeattribute].value;\r\n                    if (event.dataTransfer === undefined) {\r\n                        event.originalEvent.dataTransfer.setData('data', dataid);\r\n                    }\r\n                    else {\r\n                        event.dataTransfer.setData('data', dataid)\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n    return DDO;\r\n}\r\n\r\npqDropOnMe.$inject = [];\r\nfunction pqDropOnMe() {\r\n    var DDO = {\r\n        restrict: 'A',\r\n        scope: {\r\n            onDrop: '&'\r\n        },\r\n        link: function (scope, element, attrs) {\r\n            let preventDrop = attrs[\"pqDropOnMe\"] === \"false\";\r\n            element.on('dragover', function (event) {\r\n                if (!preventDrop)\r\n                    event.preventDefault();\r\n            });\r\n            element.on('drop', function (event) {\r\n                event.preventDefault();\r\n                let dataid;\r\n                if (event.dataTransfer === undefined) {\r\n                    dataid = event.originalEvent.dataTransfer.getData('data');\r\n                }\r\n                else {\r\n                    dataid = event.dataTransfer.getData('data');\r\n                }\r\n                scope.onDrop({ event: event, data: dataid });\r\n            });\r\n        }\r\n    };\r\n    return DDO;\r\n}","ï»¿import './modal.directive.scss';\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('scheduler.module')\r\n        .directive('pqModal', Directive);\r\n\r\n    function Directive(modalService) {\r\n        return {\r\n            link: function (scope, el, attrs) {\r\n                let element = $(el);\r\n\r\n                // ensure id attribute exists\r\n                if (!attrs.id) {\r\n                    console.error('modal must have an id');\r\n                    return;\r\n                }\r\n\r\n                // move element to bottom of page (just before </body>) so it can be displayed above everything else\r\n                element.appendTo('body');\r\n                \r\n\r\n                // close modal on background click\r\n                element.on('click', function (e) {\r\n                    var target = $(e.target);\r\n                    if (!target.closest('.pq-modal-body').length) {\r\n                        scope.$evalAsync(Close);\r\n                    }\r\n                });\r\n\r\n                // add self (this modal instance) to the modal service so it's accessible from controllers\r\n                var modal = {\r\n                    id: attrs.id,\r\n                    open: Open,\r\n                    close: Close\r\n                };\r\n                modalService.Add(modal);\r\n\r\n                // remove self from modal service when directive is destroyed\r\n                scope.$on('$destroy', function () {\r\n                    modalService.Remove(attrs.id);\r\n                    element.remove();\r\n                });\r\n\r\n                // open modal\r\n                function Open() {\r\n                    element.show();\r\n                    $('body').addClass('pq-modal-open');\r\n                }\r\n\r\n                // open modal\r\n                function Open2() {\r\n                    element.show();\r\n                    $('body').addClass('pq-modal-open');\r\n                }\r\n\r\n                // close modal\r\n                function Close() {\r\n                    element.hide();\r\n                    $('body').removeClass('pq-modal-open');\r\n                }\r\n            }\r\n        };\r\n    }\r\n})();","// extracted by mini-css-extract-plugin","module.exports = \"<div class=\\\"scheduler-edit-column\\\"> <div class=\\\"top-content\\\"> <label for=\\\"pqstageName\\\">Name</label> <input type=\\\"text\\\" id=\\\"pqstageName\\\" ng-model=\\\"name\\\"> </div> <div class=\\\"pq-modal-footer\\\"> <button type=\\\"button\\\" ng-click=\\\"$ctrl.closeModal($event, false)\\\" class=\\\"btn btn-default\\\" focus-element=\\\"autofocus\\\" data-dismiss=\\\"pq-modal\\\">Close</button> <button type=\\\"button\\\" ng-click=\\\"$ctrl.closeModal($event, true)\\\" class=\\\"btn btn-primary\\\">Add</button> </div> </div> \";","ï»¿import './schedulereditcolumn.component.scss';\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('scheduler.module')\r\n        .component('pqSchedulerEditColumn', {\r\n            template: require('./schedulereditcolumn.component.html'),\r\n            controller: SchedulerEditColumnController,\r\n            bindings: {\r\n                onAddStage: '&'\r\n            }\r\n        });\r\n    \r\n    SchedulerEditColumnController.inject = ['$scope', '$window', '$document', '$timeout','modalService','schedulerDataService', 'Stage', 'Status'];\r\n   \r\n\r\n    function SchedulerEditColumnController($scope, $window, $document, $timeout, modalService, schedulerDataService, Stage, Status) {\r\n        let $ctrl = this;\r\n        $scope.name = '';\r\n        let $ctrlAddColumn = $('pq-scheduler-edit-column');\r\n     \r\n        $ctrl.closeModal = function closeModal($event, save) {\r\n            $event.preventDefault();\r\n            if (save) {\r\n                $ctrl.onAddStage({ stagename: $scope.name });\r\n            }\r\n            $ctrlAddColumn.hide();\r\n        };\r\n    }\r\n}\r\n)();","// extracted by mini-css-extract-plugin","ï»¿(function () {\n    'use strict';\n\n    angular\n        .module('scheduler.module', []);\n})();","ï»¿(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('scheduler.module')\r\n        .factory('modalService', modalService);\r\n\r\n    function modalService() {\r\n        var modals = []; // array of modals on the page\r\n        var service = {};\r\n\r\n        service.Add = Add;\r\n        service.Remove = Remove;\r\n        service.Open = Open;\r\n        service.Close = Close;\r\n\r\n        return service;\r\n\r\n        function FindWhere(id) {\r\n            var arrayLength = modals.length;\r\n            for (var i = 0; i < arrayLength; i++) {\r\n                if (modals[i].id === id) {\r\n                    return modals[i];\r\n                }\r\n            }\r\n        }\r\n\r\n        function Add(modal) {\r\n            // add modal to array of active modals\r\n            modals.push(modal);\r\n        }\r\n\r\n        function Remove(id) {\r\n            // remove modal from array of active modals\r\n            var modalToRemove = _.findWhere(modals, { id: id });\r\n            modals = _.without(modals, modalToRemove);\r\n        }\r\n\r\n        function Open(id) {\r\n            // open modal specified by id\r\n            var modal = _.findWhere(modals, { id: id });\r\n            modal.open();\r\n        }\r\n\r\n        function Close(id) {\r\n            // close modal specified by id\r\n            var modal = _.findWhere(modals, { id: id });\r\n            modal.close();\r\n        }\r\n    }\r\n\r\n})();\r\n","ï»¿(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('scheduler.module')\r\n        .factory('schedulerDataService', schedulerDataService);\r\n\r\n    schedulerDataService.$inject = ['$http'];\r\n    function schedulerDataService($http) {\r\n        var basePath = '/ajax/PQAppCalendar.ashx?act=';\r\n\r\n        return {\r\n            getDate: function (date) {\r\n                if (!date)\r\n                    return date;\r\n\r\n                let timeZoneOffsetMs = date.getTimezoneOffset() * 60000;\r\n                let result = new Date(date.getTime() - timeZoneOffsetMs);\r\n                return result;\r\n            },\r\n\r\n            handleWrappedError : function (result) {\r\n                if (result.error) {\r\n                    if (result.error.message) {\r\n                        alert(result.error.message);\r\n                    }\r\n                    else {\r\n                        console.log('undefined error');\r\n                    }\r\n                }\r\n                else {\r\n                    console.log('not wrapped error');\r\n                }\r\n            },\r\n           handleError : function (result) {\r\n                if (result && result.statusText) {\r\n                    console.log(result.statusText);\r\n                }\r\n                else {\r\n                    if (result)\r\n                        console.log(result);\r\n                    else\r\n                        console.log('error');\r\n                }\r\n            },\r\n           saveCustomizeData: function (params) {\r\n               return $.ajax({\r\n                   url: basePath + 'save-customizedata',\r\n                   type: 'post',\r\n                   async: true,\r\n                   contentType: 'application/json; charset=utf-8',\r\n                   data: JSON.stringify(params),\r\n                   dataType: 'json'\r\n               })\r\n           },\r\n            getCustomizeData: function () {\r\n                return $.ajax({\r\n                    url: basePath + 'get-customizedata',\r\n                    type: 'post',\r\n                    async: true,\r\n                    contentType: 'application/json; charset=utf-8',\r\n                    data: [],\r\n                    dataType: 'json'\r\n                })\r\n            },\r\n            saveAppointment: function (params) {\r\n               return $.ajax({\r\n                   url: basePath + 'save-appointment',\r\n                    type: 'post',\r\n                    async: true,\r\n                    contentType: 'application/json; charset=utf-8',\r\n                    data: JSON.stringify(params),\r\n                    dataType: 'json'\r\n                });\r\n            },\r\n            eventChanged: function (params) {\r\n                return $.ajax({\r\n                    url: basePath + 'appointment-changed',\r\n                    type: 'post',\r\n                    async: true,\r\n                    contentType: 'application/json; charset=utf-8',\r\n                    data: JSON.stringify(params),\r\n                    dataType: 'json'\r\n                });\r\n            },\r\n\r\n            loadAppointments: function (from, to) {\r\n                var params = { from: from, to: to };\r\n               return $.ajax({\r\n                   url: basePath + 'load-appointmens',\r\n                    type: 'post',\r\n                    async: true,\r\n                    contentType: 'application/json; charset=utf-8',\r\n                    data: JSON.stringify(params),\r\n                    dataType: 'json'\r\n                });\r\n            },\r\n\r\n            loadUnits: function (params) {\r\n              return  $.ajax({\r\n                    url: basePath + 'load-units',\r\n                    type: 'post',\r\n                    async: true,\r\n                    contentType: 'application/json; charset=utf-8',\r\n                    data: [],\r\n                    dataType: 'json',\r\n                });\r\n            }\r\n\r\n        };\r\n    }\r\n})();"],"sourceRoot":""}